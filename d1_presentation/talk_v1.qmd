---
title: "App-solutely Fabulous"
subtitle: "A Data Scientist's Guide to Choosing Python Web Tools Wisely"
author: "Alan Feder"
format: 
  revealjs:
    theme: sky
    transition: slide
    slide-number: true
    footer: "2024 Government & Public Sector R Conference - Alan Feder"
    embed-resources: true
css: styles.css
---

## Who am I?

::: columns
::: {.column width="20%"}
![](https://github.com/AlanFeder/nyr-rag-app/blob/main/AJF_Headshot.jpg?raw=true){fig-alt="Alan Feder Headshot" width="4in"}
:::

::: {.column width="80%"}
-   Alan Feder
-   Staff LLM Data Scientist at Magnifi / TIFIN
- Freelance Consultant
- NYC Expat ![](figs/nyc_logo.png){.center height="0.5in"} ![](https://cdn-icons-png.flaticon.com/512/664/664866.png){.center height="0.5in"} ![](figs/maryland_logo.png){.center height="0.5in"}
- R Expat ![](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/1200px-R_logo.svg.png){.center height="0.5in"}  ![](https://cdn-icons-png.flaticon.com/512/664/664866.png){.center height="0.5in"}  ![](https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1200px-Python-logo-notext.svg.png){.center height="0.5in"}

:::
:::

## Data Scientists in R love Shiny


::: columns 
:::: {.column width="50%"}
- How do I show interactive analysis?
- Am I stuck with copying and pasting my graphs to PowerPoint?
::::

:::: {.column width="50%"}
<!-- ::::: {.fragment} -->
![](figs/shiny_logo.png)
<!-- ::::: -->
::::
:::

## The Zen of Python

<!-- Aphorism #13: **There should be one-- and preferably only one --obvious way to do it.** -->
![](figs/zen_of_python.png){height="6in" fig-align="center"}

## Only one??

::: {.columns}
::: {.column width="33%"}
:::: {.fragment}
![](figs/streamlit_logo.png){height="1.4in" fig-align="center"}
::::

:::: {.fragment}
![](figs/dash_plotly_logo.png){height="1.4in" fig-align="center"}

::::

:::: {.fragment}
![](figs/jupyter_logo.png){height="1.4in" fig-align="center"}
::::

:::

::: {.column width="33%"}
:::: {.fragment}
![](figs/gradio_logo.png){height="1.4in" fig-align="center"}

::::

:::: {.fragment}
![](figs/flask_logo.png){height="1.4in" fig-align="center"}
::::

:::: {.fragment}
![](figs/django_logo.png){height="1.4in" fig-align="center"}
::::

:::

::: {.column width="33%"}
:::: {.fragment}
![](figs/shiny_logo.png){height="1.4in" fig-align="center"}
::::

:::: {.fragment}
![](figs/panel_holoviz_logo.png){height="1.4in" fig-align="center"}
::::

:::: {.fragment}
![](https://raw.githubusercontent.com/AnswerDotAI/fasthtml/e91b9af04a3e70b0d769f2a4928fdad1f2c67620/nbs/logo.svg){height="1.4in" fig-align="center"}
::::
:::
:::

## Too many options

[![](https://imgs.xkcd.com/comics/standards_2x.png)](https://xkcd.com/927/)

## Try (some of) them!


::: {.columns}
:::: {.column width="33%"}
![](figs/streamlit_logo.png){height="1.4in" fig-align="center"}

![](figs/gradio_logo.png){height="1.4in" fig-align="center"}

![](figs/shiny_logo.png){height="1.4in" fig-align="center"}
::::

:::: {.column width="66%"}

- Let's try to make one app with three different methods

- RAG Chatbot referencing a specific data set

  - Previous RGov Talks
 
::::

:::

## Server vs. Serverless


- The computations need to happen _somewhere_
- `localhost:8000` - doesn't help with sharing
  - Setting up servers can be difficult without software experience
- In-browser versions can be helpful
  - Not all Python packages work
  - BE CAREFUL ABOUT YOUR PASSWORDS AND API KEYS

# Streamlit

![](figs/streamlit_logo.png){fig-align="center"}

## Streamlit


::: {.columns}

:::: {.column width="66%"}

- Launched in 2019
- Purchased by Snowflake in 2022 for $800m ![](figs/snowflake_logo.png){height="0.5in"}
- I've been using it a lot for the past 2 years - and even used in a (NY) R Conference talk!
::::

:::: {.column width="33%"}
![](figs/streamlit_name2.png)

::::
:::

## Streamlit Example

[![](figs/streamlit_app1.png){height="6in"}](https://rgov-2024-ajf.streamlit.app/)

## Streamlit - ðŸ˜ƒ


- Lots of elements to use
  - New ones all the time
- Very Pythonic
  - Simple to transition from script


## Streamlit - ðŸ«¤


- Runs top to bottom - not at all reactive
- Can get very slow if it gets big
  - Has caching, `session_state`
- All Streamlit apps kinda look the same
  - Hard to tweak UI







## Streamlit-Lite



- [Stlite](https://edit.share.stlite.net/)
  - Not officially supported by Streamlit
- Pretty easy interface to copy your Streamlit apps
- I couldn't figure out how to do streaming
- Slower to load, slower to run

# Gradio

![](figs/gradio_logo.png){fig-align="center"}

## Gradio


::: {.columns}

:::: {.column width="50%"}

- Started by  Stanford PhD Students in 2019
- Purchased by Hugging Face ![](figs/hf_logo.png){height="0.5in"} in December 2021
- Powers most Huggingface Spaces
::::

:::: {.column width="50%"}
![](figs/gradio_name.png)

::::
:::

## Gradio - Simplest
 
[![](figs/basic_gradio.png)](https://huggingface.co/spaces/AlanFeder/RGov_Gradio_App_-_Basic_Chat)

## Gradio - More Complex
 
[![](figs/better_gradio.png){height="6in"}](https://huggingface.co/spaces/AlanFeder/RGov_Gradio_App_-_Better_Chat)

## Gradio - ðŸ˜ƒ

- Very focused on AI
- Even simpler than Streamlit
- Built in interfaces for Chat
  - Easy to add in features like chat history, Thumbs Up/ Thumbs Down
- Has reactivity


## Gradio - ðŸ«¤

- Less flexible than Streamlit
  - Complicated to do multiple things at once
- Fewer components available
  - Sometimes need to use HTML to do what you want
- All Gradio apps look the same -- at least as much as Streamlit


## Gradio - Deployment Possibilities

- Local / Self-hosted
- Public Link, local compute (`share=True`)
- Through Huggingface Spaces (free with basic CPU)
- In-browser (Gradio Lite)
  - I couldn't figure it out for complex app

# Shiny

![](figs/shiny_moana.png){fig-align="center" height="3.4in"}

## Shiny

- 2012: Developed for R by the company formerly known as RStudio ![](figs/rstudio_logo.png){height="0.5in"}
- 2022: ![](figs/posit_logo.png){height="0.5in"}   
 ![](figs/shiny_python_2nd_best.png){width="6in" fig-align="center"} <!--![](figs/rstudio2posit.png){width="5in"}  -->


## Two Types of Shiny {.smaller}

::: {.columns}

:::: {.column width="45%"}

### Shiny Core


- More similar to RShiny
- Split Server vs. UI sections
  - Only one file
- Nested Functions


::::

:::: {.column width="10%"}


::::

:::: {.column width="45%"}

### Shiny Express


- Kinda Streamlit-ish
- No Split between Server and UI sections
- Heavy use of context managers 

```{.python code-line-numbers="1"}
with ui.row():
  XXXX
```
::::

:::
![](figs/horizontal-line.svg)

- Use of decorators
```{.python code-line-numbers="1"}
@reactive.text
def function():
    ...
```

## Shiny Example

![](figs/shiny1.png){ fig-align="center"}

## Shiny - ðŸ˜ƒ

- All Shiny is reactive - great for complex Apps
- Very flexible, can make almost any change you want
- Lots of components
- Documentation gives really good background/philosophy on how it works

<!-- ![](figs/shiny_moana.png){height="2in"} -->

## Shiny - ðŸ«¤

- I found it confusing, not as intuitive/"Pythonic"
- Default UI is pretty bland
- Not as many components as Streamlit
- You kinda need to learn the philosophy of Shiny before you can do much complicated



<!-- ## Shiny is building in Chat Components

::: {.columns}

:::: {.column width="50%"}

[![](figs/basic_shiny.png)](https://huggingface.co/spaces/AlanFeder/RGov-2024-Shiny_v1)

::::

:::: {.column width="50%"}

Similar to Gradio, Streamlit

::::

::: -->


##  Help is on the way!

::: {.columns}

:::: {.column width="50%"}

### Shiny

[![](figs/shiny_assistant.png)](https://gallery.shinyapps.io/assistant/)

::::

:::: {.column width="50%"}

### Gradio

[![](figs/gradio_assistant.png)](https://www.gradio.app/playground)
::::

:::

## Shinylive

[![](figs/shinylive_easy.png)](https://www.youtube.com/watch?v=8SHTj5QYQuc)

## Shinylive really is easy!

[![](figs/shinylive_example.png){height="6in" fig-align="center"}](https://www.alanfeder.com/dcr_rag/shinylive1/)

## One other option... 

If you're going to go in-browser, and what you're doing isn't that complex...

. . .

... AI might be able to build it for you without any of these apps

## Ask Claude/ChatGPT to build you an in-browser tool

![](figs/basic_html.png)

## It will then improve it nicely

::: {.columns}

:::: {.column width="40%"}

![](figs/make_it_prettier.png)



![](figs/make_it_prettier2.png)

::::


:::: {.column width="60%"}

[![](figs/better_html.png)](https://www.alanfeder.com/dcr_rag/html_app.html)

::::

:::

## So What Should I Do?

If you know one tool well, you can use it for most things - they overlap a lot.

## Really, What Should I Do?

```{mermaid}
%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '20px', 'fontFamily': 'arial', 'nodeTextColor': '#000000', 'mainBkg': '#f5f5f5' }}}%%
flowchart LR
    A[Start] --> B{Running a simple<br>AI model?}
    B -->|Yes| C[Use Gradio]
    B -->|No| F{Need complex app with<br>lots of interactive changes?}
    F -->|Yes| E[Use Shiny]
    F -->|No| H[Use Streamlit]

    style C fill:#90EE90,color:#000000,font-weight:bold
    style E fill:#90EE90,color:#000000,font-weight:bold
    style H fill:#90EE90,color:#000000,font-weight:bold
    style B fill:#f5f5f5,color:#000000,font-weight:bold
    style F fill:#f5f5f5,color:#000000,font-weight:bold
    style A fill:#f5f5f5,color:#000000,font-weight:bold
```

## But ...

```{mermaid}
%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '16px', 'fontFamily': 'arial', 'nodeTextColor': '#000000', 'mainBkg': '#f5f5f5', 'labelBackgroundColor': 'transparent' }}}%%
flowchart LR

    A([Start])
    X{Is this a one-off app that<br>can be done in-browser and<br>doesn't need heavy Python?}
    Y[Just ask an LLM<br>to make it for you]
    
    A --> X
    X -->|Yes| Y
    X -->|No| B
    subgraph Python-Frameworks[" "]
        direction LR
        B{Running a simple<br>AI model?}
        B -->|Yes| C[Use Gradio]
        B -->|No| F{Need complex app with<br>lots of interactive changes?}
        F -->|Yes| E[Use Shiny]
        F -->|No| H[Use Streamlit]
    end

    style C fill:#90EE90,color:#000000,font-weight:bold
    style H fill:#90EE90,color:#000000,font-weight:bold
    style E fill:#90EE90,color:#000000,font-weight:bold
    style Y fill:#90EE90,color:#000000,font-weight:bold,font-size:16px,stroke:#000000,stroke-width:3px
    style B fill:#f5f5f5,color:#000000,font-weight:bold
    style F fill:#f5f5f5,color:#000000,font-weight:bold
    style A fill:#f5f5f5,color:#000000,font-weight:bold,fontSize:20px
    style X fill:#f5f5f5,color:#000000,font-weight:bold
    
    style Python-Frameworks fill:#e0e0e0,stroke-dasharray: 5 5
```

## {.smaller}

::: {.columns}


:::: {.column width="40%"}
### Alan Feder 


![](https://github.com/AlanFeder/nyr-rag-app/blob/main/AJF_Headshot.jpg?raw=true){fig-alt="Alan Feder Headshot" width="3in"}

***
[![](figs/email_logo.png){.center height="0.3in"} AlanFeder@gmail.com](mailto:AlanFeder@gmail.com)  


[![](figs/www_logo.png){.center height="0.3in"} https://www.alanfeder.com](https://www.alanfeder.com)  


[![](figs/linkedin_logo.png){.center height="0.3in"} alanfeder](https://www.linkedin.com/in/alanfeder/)

::::

:::: {.column width="60%"}


- [Code ![](figs/github_logo.png){.center height="0.3in"}](https://github.com/AlanFeder/rgov-2024/) `AlanFeder/rgov-2024` 
- [Slides](https://www.alanfeder.com/dcr_rag/) https://www.alanfeder.com/dcr_rag/  
![](figs/qrcode.png){fig-align="center" height="2.69in" width="2.69in"}

***

| Tool | Basic | Complex | Lite |
|------|--------|---------|------------|
| Streamlit |  | [Link](https://rgov-2024-ajf.streamlit.app/) | [Link](https://www.alanfeder.com/dcr_rag/streamlit_lite.html) |
| Gradio | [Link](https://huggingface.co/spaces/AlanFeder/RGov_Gradio_App_-_Basic_Chat) | [Link](https://huggingface.co/spaces/AlanFeder/RGov_Gradio_App_-_Better_Chat) |  |
| Shiny | | [Link](https://huggingface.co/spaces/AlanFeder/RGov-2024-Shiny_v1) | [Link](https://www.alanfeder.com/dcr_rag/shinylive1/) |
| LLM/HTML | | | [Link](https://www.alanfeder.com/dcr_rag/html_app.html) |

::::
:::